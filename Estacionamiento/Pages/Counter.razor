@page "/counter"
@using Microsoft.WindowsAzure.Storage;
@using Microsoft.WindowsAzure.Storage.Table;
@using System.Threading.Tasks;
@using System.Linq;
@using System.Collections.Generic;
<center><h1>Registro de estacionamiento</h1></center>
<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Lugar</th>
            <th scope="col">Tipo de vehiculo</th>
            <th scope="col">Nombre de propietario</th>
            <th scope="col">Hora de entrada</th>
            <th scope="col">Costo</th>
            <th scope="col">Pago</th>
            <th scope="col">Fotografia</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Estacionamiento e in ListaEstacionamiento)
        {
        <tr>
          <td>@e.RowKey</td>
            <td>@e.Tipo</td>
            <td>@e.Nombre</td>
            <td>@e.HoraEntrada</td>
            <td>@e.Costo</td>
            <td>@e.Pago</td>
            <td><img src="@e.Imagen" width="100px" height="100px" /></td>
        </tr>
        }
    </tbody>
</table>

@code {
    List<Estacionamiento> ListaEstacionamiento = new List<Estacionamiento>();
    List<ElementosdeTabla> ElementosTabla = new List<ElementosdeTabla>();
    string elementoimagen;
    protected override async Task OnInitializedAsync()

    {
        var CuentadeAlmacenamiento = CloudStorageAccount.Parse
                  ("");
        var TablaNoSQL = CuentadeAlmacenamiento.CreateCloudTableClient();
        var tabla = TablaNoSQL.GetTableReference("estacionamientoss");
        var consulta = new TableQuery<Estacionamiento>();
        TableContinuationToken token = null;
        try
        {
            var Datos = await tabla.ExecuteQuerySegmentedAsync<Estacionamiento>
            (consulta, token, null, null);
            ListaEstacionamiento.AddRange(Datos.Results);
            int iLugar = 0;
            int iTipo = 0;
            int iNombre = 0;
            int iHoraEntrada = 0;
            int iCosto = 0;
            int iPago = 0;
            int iimagen = 0;
            ElementosTabla = ListaEstacionamiento.Select(r => new ElementosdeTabla()
            {
                Lugar = ListaEstacionamiento.ElementAt(iLugar++).RowKey,
                Tipo = ListaEstacionamiento.ElementAt(iTipo++).Tipo,
                Nombre = ListaEstacionamiento.ElementAt(iNombre++).Nombre,
                HoraEntrada = ListaEstacionamiento.ElementAt(iHoraEntrada++).HoraEntrada,
                Costo = ListaEstacionamiento.ElementAt(iCosto++).Costo,
                Pago = ListaEstacionamiento.ElementAt(iPago++).Pago,
                Imagen = ListaEstacionamiento.ElementAt(iimagen++).Imagen

            }).ToList();
        }
        catch (Exception)
        {

            throw;
        }
    }
    public class Estacionamiento : TableEntity
    {
        public Estacionamiento(string Espacio, string Lugar)
        {
            PartitionKey = Espacio;
            RowKey = Lugar;
        }
        public Estacionamiento() { }

        public string Tipo { get; set; }
        public string Nombre { get; set; }
        public string HoraEntrada { get; set; }
        public double Costo { get; set; }
        public double Pago { get; set; }
        public string Imagen { get; set; }
    }
    public class ElementosdeTabla
    {
        public string Lugar { get; set; }
        public string Tipo { get; set; }
        public string Nombre { get; set; }
        public string HoraEntrada { get; set; }
        public double Costo { get; set; }
        public double Pago { get; set; }
        public string Imagen { get; set; }


    }
}
